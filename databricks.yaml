name: Databricks Job Creation/Update

on:
  push:
    branches:
      - main  # Adjust the branch as needed
    paths:
      - 'job_config.json'  # Trigger only when this file changes

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Databricks CLI
      run: |
        pip install databricks-cli jq

    - name: Authenticate with Databricks
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
        # Validate authentication
        databricks jobs list || exit 1

    - name: Check if Job Exists
      id: check_job
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
        JOB_NAME=$(jq -r '.name' job_config.json)
        JOB_ID=$(databricks jobs list --output json | jq -r --arg name "$JOB_NAME" '.jobs[] | select(.settings.name == $name) | .job_id')

        if [ -z "$JOB_ID" ]; then
          echo "Job does not exist, creating a new job..."
          echo "JOB_EXISTS=false" >> $GITHUB_ENV
        else
          echo "Job exists with ID: $JOB_ID, updating job..."
          echo "JOB_EXISTS=true" >> $GITHUB_ENV
          echo "JOB_ID=$JOB_ID" >> $GITHUB_ENV
        fi

    - name: Create New Job
      if: env.JOB_EXISTS == 'false'
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
        databricks jobs create --json-file job_config.json

    - name: Update Existing Job
      if: env.JOB_EXISTS == 'true'
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
        databricks jobs reset --job-id $JOB_ID --json-file job_config.json
